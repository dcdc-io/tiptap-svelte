(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{99:function(e,t,n){"use strict";n.r(t);var c=n(0),o=n(1),s=(n(2),n(10)),r=n(11);function b(e){let t,n;const o=new s.c({props:{class:"editor__content",editor:e[0]}});return{c(){t=Object(c.y)("div"),Object(c.r)(o.$$.fragment),this.h()},l(e){t=Object(c.n)(e,"DIV",{class:!0});var n=Object(c.l)(t);Object(c.m)(o.$$.fragment,n),n.forEach(c.v),this.h()},h(){Object(c.g)(t,"class","editor")},m(e,s){Object(c.J)(e,t,s),Object(c.O)(o,t,null),n=!0},p(e,t){const n={};1&t&&(n.editor=e[0]),o.$set(n)},i(e){n||(Object(c.ib)(o.$$.fragment,e),n=!0)},o(e){Object(c.jb)(o.$$.fragment,e),n=!1},d(e){e&&Object(c.v)(t),Object(c.u)(o)}}}function d(e){let t,n,o=e[0]&&b(e);return{c(){o&&o.c(),t=Object(c.z)()},l(e){o&&o.l(e),t=Object(c.z)()},m(e,s){o&&o.m(e,s),Object(c.J)(e,t,s),n=!0},p(e,[n]){e[0]?o?(o.p(e,n),Object(c.ib)(o,1)):(o=b(e),o.c(),Object(c.ib)(o,1),o.m(t.parentNode,t)):o&&(Object(c.H)(),Object(c.jb)(o,1,1,()=>{o=null}),Object(c.k)())},i(e){n||(Object(c.ib)(o),n=!0)},o(e){Object(c.jb)(o),n=!1},d(e){o&&o.d(e),e&&Object(c.v)(t)}}}function a(e,t,n){let c;return Object(o.d)(()=>{n(0,c=new s.b({extensions:[new r.a,new r.c,new r.e,new r.i,new r.j({levels:[1,2,3]}),new r.p,new r.r,new r.z,new r.A,new r.b,new r.d,new r.n,new r.o,new r.k],content:"\n          <h2>\n            Markdown Shortcuts\n          </h2>\n          <p>\n            Start a new line and type <code>#</code> followed by a <code>space</code> and you will get an H1 headline.\n          </p>\n          <p>\n            This feature is called <strong>input rules</strong>. There are some of these shortcuts for the most basic nodes enabled by default. Try <code>#, ##, ###, â€¦</code> for headlines, <code>></code> for blockquotes, <code>- or +</code> for bullet lists. And of course you can add your own input rules.\n          </p>\n        "}))}),Object(o.c)(()=>{c&&c.destroy()}),[c]}class l extends c.a{constructor(e){super(),Object(c.I)(this,e,a,d,c.W,{})}}t.default=l}}]);